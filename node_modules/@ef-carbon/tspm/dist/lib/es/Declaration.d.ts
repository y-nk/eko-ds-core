import { ExportAllDeclaration, ExportNamedDeclaration, ImportDeclaration } from "estree";
import RequireCallExpression from "./RequireCallExpression";
import Base, { IDerivedOptions as IBaseOptions } from "../Declaration";
export declare type Interface = (ExportAllDeclaration | ExportNamedDeclaration) | ImportDeclaration | RequireCallExpression;
export declare type IOptions<T extends Interface> = IBaseOptions<T>;
export default class Declaration<T extends Interface> extends Base<T> {
    constructor({ declaration, file, ...rest }: IOptions<T>);
    private readonly literal;
    readonly path: string;
    protected update(value: string): void;
}
