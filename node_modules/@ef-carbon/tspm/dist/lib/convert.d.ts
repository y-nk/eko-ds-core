import EsImport, { Interface as EsImportInterface } from "./es/Export";
import EsFile from "./es/File";
import EsExport, { Interface as EsExportInterface } from "./es/Import";
import EsRequire, { Interface as EsRequireInterface } from "./es/Require";
import { IOptions as IMapperOptions } from "./Mapper";
import TsImport, { Interface as TsImportInterface } from "./ts/Export";
import TsFile from "./ts/File";
import TsExport, { Interface as TsExportInterface } from "./ts/Import";
export declare type DeclarationInterface = EsRequireInterface | EsImportInterface | EsExportInterface | TsImportInterface | TsExportInterface;
export declare type Declaration = EsImport | EsExport | TsImport | TsExport | EsRequire;
export declare type File = EsFile | TsFile;
export declare type IOptions = IMapperOptions;
export default function convert({ ...other }: IOptions): AsyncIterableIterator<Declaration>;
